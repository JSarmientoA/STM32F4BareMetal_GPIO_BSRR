
P3_GPIO_BSRR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000174  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000338  08000340  00010340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000338  08000338  00010340  2**0
                  CONTENTS
  4 .ARM          00000000  08000338  08000338  00010340  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000338  08000340  00010340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000338  08000338  00010338  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800033c  0800033c  0001033c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000340  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000340  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010340  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003a6  00000000  00000000  00010370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000e8  00000000  00000000  00010716  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018a1a  00000000  00000000  00010878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000520  00000000  00000000  00029292  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ad65  00000000  00000000  000297b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b4517  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000b4568  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000320 	.word	0x08000320

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000320 	.word	0x08000320

08000204 <main>:
 * y se utilzan para podenr un 0, 0.0v*/
#define GPIOAEN			(1U<<0)// Estableser un 1 logico en el bit 0
#define PIN5			(1U<<5)// Estableser un 1 logico en el bit 5
#define LED_PIN			PIN5
int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;//Conectar reloj al puerto A (pormedio del bus AHB1)
 800020a:	4b1a      	ldr	r3, [pc, #104]	; (8000274 <main+0x70>)
 800020c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020e:	4a19      	ldr	r2, [pc, #100]	; (8000274 <main+0x70>)
 8000210:	f043 0301 	orr.w	r3, r3, #1
 8000214:	6313      	str	r3, [r2, #48]	; 0x30

	/*Configuración del registro Moder peroferico GPIOA. pin A5 como salida*/
	GPIOA->MODER |=(1U<<10);// Estableser un 1 logico en el bit 10
 8000216:	4b18      	ldr	r3, [pc, #96]	; (8000278 <main+0x74>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a17      	ldr	r2, [pc, #92]	; (8000278 <main+0x74>)
 800021c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000220:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);// Estableser un 0 logico en el bit 11
 8000222:	4b15      	ldr	r3, [pc, #84]	; (8000278 <main+0x74>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a14      	ldr	r2, [pc, #80]	; (8000278 <main+0x74>)
 8000228:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800022c:	6013      	str	r3, [r2, #0]
	while(1)
	{
		/*Esta configuración del registro BSRR grantiza un 1 logico (3.3v) en el pin 5*/
		GPIOA->BSRR = (0U<<21);//Establese un 0 en el bit 21. Correspndiente al pin 5
 800022e:	4b12      	ldr	r3, [pc, #72]	; (8000278 <main+0x74>)
 8000230:	2200      	movs	r2, #0
 8000232:	619a      	str	r2, [r3, #24]
		GPIOA->BSRR = LED_PIN;//Establese un 1 en el bit 5. Correspndiente al pin 5
 8000234:	4b10      	ldr	r3, [pc, #64]	; (8000278 <main+0x74>)
 8000236:	2220      	movs	r2, #32
 8000238:	619a      	str	r2, [r3, #24]
		for(int i=0;i<1500000;i++){}
 800023a:	2300      	movs	r3, #0
 800023c:	607b      	str	r3, [r7, #4]
 800023e:	e002      	b.n	8000246 <main+0x42>
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	3301      	adds	r3, #1
 8000244:	607b      	str	r3, [r7, #4]
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	4a0c      	ldr	r2, [pc, #48]	; (800027c <main+0x78>)
 800024a:	4293      	cmp	r3, r2
 800024c:	ddf8      	ble.n	8000240 <main+0x3c>

		/*Esta configuración del registro BSRR grantiza un 0 logico (0.0v) en el pin 5*/
		GPIOA->BSRR = (0U<<5);//Establese un 0 en el bit 5. Correspndiente al pin 5
 800024e:	4b0a      	ldr	r3, [pc, #40]	; (8000278 <main+0x74>)
 8000250:	2200      	movs	r2, #0
 8000252:	619a      	str	r2, [r3, #24]
		GPIOA->BSRR = (1U<<21);//Establese un 1 en el bit 21. Correspndiente al pin 5
 8000254:	4b08      	ldr	r3, [pc, #32]	; (8000278 <main+0x74>)
 8000256:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800025a:	619a      	str	r2, [r3, #24]

		for(int j=0;j<2500000;j++){}
 800025c:	2300      	movs	r3, #0
 800025e:	603b      	str	r3, [r7, #0]
 8000260:	e002      	b.n	8000268 <main+0x64>
 8000262:	683b      	ldr	r3, [r7, #0]
 8000264:	3301      	adds	r3, #1
 8000266:	603b      	str	r3, [r7, #0]
 8000268:	683b      	ldr	r3, [r7, #0]
 800026a:	4a05      	ldr	r2, [pc, #20]	; (8000280 <main+0x7c>)
 800026c:	4293      	cmp	r3, r2
 800026e:	dbf8      	blt.n	8000262 <main+0x5e>
		GPIOA->BSRR = (0U<<21);//Establese un 0 en el bit 21. Correspndiente al pin 5
 8000270:	e7dd      	b.n	800022e <main+0x2a>
 8000272:	bf00      	nop
 8000274:	40023800 	.word	0x40023800
 8000278:	40020000 	.word	0x40020000
 800027c:	0016e35f 	.word	0x0016e35f
 8000280:	002625a0 	.word	0x002625a0

08000284 <Reset_Handler>:
 8000284:	480d      	ldr	r0, [pc, #52]	; (80002bc <LoopForever+0x2>)
 8000286:	4685      	mov	sp, r0
 8000288:	f3af 8000 	nop.w
 800028c:	480c      	ldr	r0, [pc, #48]	; (80002c0 <LoopForever+0x6>)
 800028e:	490d      	ldr	r1, [pc, #52]	; (80002c4 <LoopForever+0xa>)
 8000290:	4a0d      	ldr	r2, [pc, #52]	; (80002c8 <LoopForever+0xe>)
 8000292:	2300      	movs	r3, #0
 8000294:	e002      	b.n	800029c <LoopCopyDataInit>

08000296 <CopyDataInit>:
 8000296:	58d4      	ldr	r4, [r2, r3]
 8000298:	50c4      	str	r4, [r0, r3]
 800029a:	3304      	adds	r3, #4

0800029c <LoopCopyDataInit>:
 800029c:	18c4      	adds	r4, r0, r3
 800029e:	428c      	cmp	r4, r1
 80002a0:	d3f9      	bcc.n	8000296 <CopyDataInit>
 80002a2:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <LoopForever+0x12>)
 80002a4:	4c0a      	ldr	r4, [pc, #40]	; (80002d0 <LoopForever+0x16>)
 80002a6:	2300      	movs	r3, #0
 80002a8:	e001      	b.n	80002ae <LoopFillZerobss>

080002aa <FillZerobss>:
 80002aa:	6013      	str	r3, [r2, #0]
 80002ac:	3204      	adds	r2, #4

080002ae <LoopFillZerobss>:
 80002ae:	42a2      	cmp	r2, r4
 80002b0:	d3fb      	bcc.n	80002aa <FillZerobss>
 80002b2:	f000 f811 	bl	80002d8 <__libc_init_array>
 80002b6:	f7ff ffa5 	bl	8000204 <main>

080002ba <LoopForever>:
 80002ba:	e7fe      	b.n	80002ba <LoopForever>
 80002bc:	20020000 	.word	0x20020000
 80002c0:	20000000 	.word	0x20000000
 80002c4:	20000000 	.word	0x20000000
 80002c8:	08000340 	.word	0x08000340
 80002cc:	20000000 	.word	0x20000000
 80002d0:	2000001c 	.word	0x2000001c

080002d4 <ADC_IRQHandler>:
 80002d4:	e7fe      	b.n	80002d4 <ADC_IRQHandler>
	...

080002d8 <__libc_init_array>:
 80002d8:	b570      	push	{r4, r5, r6, lr}
 80002da:	4d0d      	ldr	r5, [pc, #52]	; (8000310 <__libc_init_array+0x38>)
 80002dc:	4c0d      	ldr	r4, [pc, #52]	; (8000314 <__libc_init_array+0x3c>)
 80002de:	1b64      	subs	r4, r4, r5
 80002e0:	10a4      	asrs	r4, r4, #2
 80002e2:	2600      	movs	r6, #0
 80002e4:	42a6      	cmp	r6, r4
 80002e6:	d109      	bne.n	80002fc <__libc_init_array+0x24>
 80002e8:	4d0b      	ldr	r5, [pc, #44]	; (8000318 <__libc_init_array+0x40>)
 80002ea:	4c0c      	ldr	r4, [pc, #48]	; (800031c <__libc_init_array+0x44>)
 80002ec:	f000 f818 	bl	8000320 <_init>
 80002f0:	1b64      	subs	r4, r4, r5
 80002f2:	10a4      	asrs	r4, r4, #2
 80002f4:	2600      	movs	r6, #0
 80002f6:	42a6      	cmp	r6, r4
 80002f8:	d105      	bne.n	8000306 <__libc_init_array+0x2e>
 80002fa:	bd70      	pop	{r4, r5, r6, pc}
 80002fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000300:	4798      	blx	r3
 8000302:	3601      	adds	r6, #1
 8000304:	e7ee      	b.n	80002e4 <__libc_init_array+0xc>
 8000306:	f855 3b04 	ldr.w	r3, [r5], #4
 800030a:	4798      	blx	r3
 800030c:	3601      	adds	r6, #1
 800030e:	e7f2      	b.n	80002f6 <__libc_init_array+0x1e>
 8000310:	08000338 	.word	0x08000338
 8000314:	08000338 	.word	0x08000338
 8000318:	08000338 	.word	0x08000338
 800031c:	0800033c 	.word	0x0800033c

08000320 <_init>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	bf00      	nop
 8000324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000326:	bc08      	pop	{r3}
 8000328:	469e      	mov	lr, r3
 800032a:	4770      	bx	lr

0800032c <_fini>:
 800032c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800032e:	bf00      	nop
 8000330:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000332:	bc08      	pop	{r3}
 8000334:	469e      	mov	lr, r3
 8000336:	4770      	bx	lr
